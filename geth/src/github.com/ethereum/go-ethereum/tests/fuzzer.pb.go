// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.11.4
// source: fuzzer.proto

package tests

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Fuzzed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuiltinAddrs   []string `protobuf:"bytes,1,rep,name=builtin_addrs,json=builtinAddrs" json:"builtin_addrs,omitempty"`       // builtins
	GenesisAccount *EOA     `protobuf:"bytes,2,req,name=genesis_account,json=genesisAccount" json:"genesis_account,omitempty"` // the address that starts all
	Blocks         []*Block `protobuf:"bytes,3,rep,name=blocks" json:"blocks,omitempty"`                                       // blocks to process
	IsDebugMode    *bool    `protobuf:"varint,4,req,name=is_debug_mode,json=isDebugMode" json:"is_debug_mode,omitempty"`
}

func (x *Fuzzed) Reset() {
	*x = Fuzzed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fuzzer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fuzzed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fuzzed) ProtoMessage() {}

func (x *Fuzzed) ProtoReflect() protoreflect.Message {
	mi := &file_fuzzer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fuzzed.ProtoReflect.Descriptor instead.
func (*Fuzzed) Descriptor() ([]byte, []int) {
	return file_fuzzer_proto_rawDescGZIP(), []int{0}
}

func (x *Fuzzed) GetBuiltinAddrs() []string {
	if x != nil {
		return x.BuiltinAddrs
	}
	return nil
}

func (x *Fuzzed) GetGenesisAccount() *EOA {
	if x != nil {
		return x.GenesisAccount
	}
	return nil
}

func (x *Fuzzed) GetBlocks() []*Block {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *Fuzzed) GetIsDebugMode() bool {
	if x != nil && x.IsDebugMode != nil {
		return *x.IsDebugMode
	}
	return false
}

type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number       *uint64        `protobuf:"varint,1,req,name=number" json:"number,omitempty"`
	Author       *string        `protobuf:"bytes,2,req,name=author" json:"author,omitempty"`
	Timestamp    *uint64        `protobuf:"varint,3,req,name=timestamp" json:"timestamp,omitempty"`
	Difficulty   *uint64        `protobuf:"varint,4,req,name=difficulty" json:"difficulty,omitempty"`
	GasLimit     *uint64        `protobuf:"varint,5,req,name=gas_limit,json=gasLimit" json:"gas_limit,omitempty"`
	Transactions []*Transaction `protobuf:"bytes,6,rep,name=transactions" json:"transactions,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fuzzer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_fuzzer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_fuzzer_proto_rawDescGZIP(), []int{1}
}

func (x *Block) GetNumber() uint64 {
	if x != nil && x.Number != nil {
		return *x.Number
	}
	return 0
}

func (x *Block) GetAuthor() string {
	if x != nil && x.Author != nil {
		return *x.Author
	}
	return ""
}

func (x *Block) GetTimestamp() uint64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *Block) GetDifficulty() uint64 {
	if x != nil && x.Difficulty != nil {
		return *x.Difficulty
	}
	return 0
}

func (x *Block) GetGasLimit() uint64 {
	if x != nil && x.GasLimit != nil {
		return *x.GasLimit
	}
	return 0
}

func (x *Block) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TODO: Non-genesis accounts should also be able to submit contracts
	// (Wouldn't make too much of a difference though...)
	Sender *string `protobuf:"bytes,1,req,name=sender" json:"sender,omitempty"`
	// TODO: should be also able to call contracts that are CREATEd by contracts
	// (1) Contracts created by tx
	// (2) Contracts created by contracts
	// (3) EOAs (built-in addresses)
	Receiver                   *uint32 `protobuf:"varint,2,opt,name=receiver" json:"receiver,omitempty"`
	ReceiverDebug              *string `protobuf:"bytes,3,opt,name=receiver_debug,json=receiverDebug" json:"receiver_debug,omitempty"` // for debugging (printing)
	GasPrice                   *uint64 `protobuf:"varint,4,req,name=gas_price,json=gasPrice" json:"gas_price,omitempty"`
	Gas                        *uint64 `protobuf:"varint,5,req,name=gas" json:"gas,omitempty"`
	Value                      *uint64 `protobuf:"varint,6,req,name=value" json:"value,omitempty"`
	IsCreateTx                 *bool   `protobuf:"varint,10,req,name=is_create_tx,json=isCreateTx" json:"is_create_tx,omitempty"`
	CallTxData                 []byte  `protobuf:"bytes,11,opt,name=call_tx_data,json=callTxData" json:"call_tx_data,omitempty"`
	CreateTxConstructor        []byte  `protobuf:"bytes,12,opt,name=create_tx_constructor,json=createTxConstructor" json:"create_tx_constructor,omitempty"`
	CreateTxContract           []byte  `protobuf:"bytes,13,opt,name=create_tx_contract,json=createTxContract" json:"create_tx_contract,omitempty"`
	CreateTxConstructorPostfix []byte  `protobuf:"bytes,14,opt,name=create_tx_constructor_postfix,json=createTxConstructorPostfix" json:"create_tx_constructor_postfix,omitempty"`
	CreateTxContractPostfix    []byte  `protobuf:"bytes,15,opt,name=create_tx_contract_postfix,json=createTxContractPostfix" json:"create_tx_contract_postfix,omitempty"`
	TxDataHexDebug             *string `protobuf:"bytes,16,opt,name=tx_data_hex_debug,json=txDataHexDebug" json:"tx_data_hex_debug,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fuzzer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_fuzzer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_fuzzer_proto_rawDescGZIP(), []int{2}
}

func (x *Transaction) GetSender() string {
	if x != nil && x.Sender != nil {
		return *x.Sender
	}
	return ""
}

func (x *Transaction) GetReceiver() uint32 {
	if x != nil && x.Receiver != nil {
		return *x.Receiver
	}
	return 0
}

func (x *Transaction) GetReceiverDebug() string {
	if x != nil && x.ReceiverDebug != nil {
		return *x.ReceiverDebug
	}
	return ""
}

func (x *Transaction) GetGasPrice() uint64 {
	if x != nil && x.GasPrice != nil {
		return *x.GasPrice
	}
	return 0
}

func (x *Transaction) GetGas() uint64 {
	if x != nil && x.Gas != nil {
		return *x.Gas
	}
	return 0
}

func (x *Transaction) GetValue() uint64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *Transaction) GetIsCreateTx() bool {
	if x != nil && x.IsCreateTx != nil {
		return *x.IsCreateTx
	}
	return false
}

func (x *Transaction) GetCallTxData() []byte {
	if x != nil {
		return x.CallTxData
	}
	return nil
}

func (x *Transaction) GetCreateTxConstructor() []byte {
	if x != nil {
		return x.CreateTxConstructor
	}
	return nil
}

func (x *Transaction) GetCreateTxContract() []byte {
	if x != nil {
		return x.CreateTxContract
	}
	return nil
}

func (x *Transaction) GetCreateTxConstructorPostfix() []byte {
	if x != nil {
		return x.CreateTxConstructorPostfix
	}
	return nil
}

func (x *Transaction) GetCreateTxContractPostfix() []byte {
	if x != nil {
		return x.CreateTxContractPostfix
	}
	return nil
}

func (x *Transaction) GetTxDataHexDebug() string {
	if x != nil && x.TxDataHexDebug != nil {
		return *x.TxDataHexDebug
	}
	return ""
}

type EOA struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address *string `protobuf:"bytes,1,req,name=address" json:"address,omitempty"`
	Balance *uint64 `protobuf:"varint,2,req,name=balance" json:"balance,omitempty"`
	Nonce   *uint64 `protobuf:"varint,3,req,name=nonce" json:"nonce,omitempty"`
}

func (x *EOA) Reset() {
	*x = EOA{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fuzzer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EOA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EOA) ProtoMessage() {}

func (x *EOA) ProtoReflect() protoreflect.Message {
	mi := &file_fuzzer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EOA.ProtoReflect.Descriptor instead.
func (*EOA) Descriptor() ([]byte, []int) {
	return file_fuzzer_proto_rawDescGZIP(), []int{3}
}

func (x *EOA) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *EOA) GetBalance() uint64 {
	if x != nil && x.Balance != nil {
		return *x.Balance
	}
	return 0
}

func (x *EOA) GetNonce() uint64 {
	if x != nil && x.Nonce != nil {
		return *x.Nonce
	}
	return 0
}

type FuzzResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roots  []string `protobuf:"bytes,1,rep,name=roots" json:"roots,omitempty"`
	Dumps  []string `protobuf:"bytes,2,rep,name=dumps" json:"dumps,omitempty"`
	Traces []string `protobuf:"bytes,3,rep,name=traces" json:"traces,omitempty"`
}

func (x *FuzzResult) Reset() {
	*x = FuzzResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fuzzer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FuzzResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuzzResult) ProtoMessage() {}

func (x *FuzzResult) ProtoReflect() protoreflect.Message {
	mi := &file_fuzzer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuzzResult.ProtoReflect.Descriptor instead.
func (*FuzzResult) Descriptor() ([]byte, []int) {
	return file_fuzzer_proto_rawDescGZIP(), []int{4}
}

func (x *FuzzResult) GetRoots() []string {
	if x != nil {
		return x.Roots
	}
	return nil
}

func (x *FuzzResult) GetDumps() []string {
	if x != nil {
		return x.Dumps
	}
	return nil
}

func (x *FuzzResult) GetTraces() []string {
	if x != nil {
		return x.Traces
	}
	return nil
}

var File_fuzzer_proto protoreflect.FileDescriptor

var file_fuzzer_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x66, 0x75, 0x7a, 0x7a, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa0,
	0x01, 0x0a, 0x06, 0x46, 0x75, 0x7a, 0x7a, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x75, 0x69,
	0x6c, 0x74, 0x69, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x73, 0x12, 0x2d,
	0x0a, 0x0f, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x45, 0x4f, 0x41, 0x52, 0x0e, 0x67,
	0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a,
	0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x22, 0x0a,
	0x0d, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x02, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x44, 0x65, 0x62, 0x75, 0x67, 0x4d, 0x6f, 0x64,
	0x65, 0x22, 0xc4, 0x01, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x02, 0x28, 0x04, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x66,
	0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x04, 0x20, 0x02, 0x28, 0x04, 0x52, 0x0a, 0x64,
	0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x73,
	0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x02, 0x28, 0x04, 0x52, 0x08, 0x67, 0x61,
	0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x30, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xfe, 0x03, 0x0a, 0x0b, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x65,
	0x62, 0x75, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x02, 0x28, 0x04, 0x52, 0x08, 0x67, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x67, 0x61, 0x73, 0x18, 0x05, 0x20, 0x02, 0x28, 0x04, 0x52, 0x03, 0x67,
	0x61, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x02, 0x28,
	0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x78, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0a,
	0x69, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x78, 0x12, 0x20, 0x0a, 0x0c, 0x63, 0x61,
	0x6c, 0x6c, 0x5f, 0x74, 0x78, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x78, 0x44, 0x61, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x15,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x78, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x78, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x2c, 0x0a, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x78, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x41,
	0x0a, 0x1d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x78, 0x5f, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x66, 0x69, 0x78, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x1a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x78, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x66, 0x69,
	0x78, 0x12, 0x3b, 0x0a, 0x1a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x78, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x66, 0x69, 0x78, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x17, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x78, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x66, 0x69, 0x78, 0x12, 0x29,
	0x0a, 0x11, 0x74, 0x78, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x68, 0x65, 0x78, 0x5f, 0x64, 0x65,
	0x62, 0x75, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x78, 0x44, 0x61, 0x74,
	0x61, 0x48, 0x65, 0x78, 0x44, 0x65, 0x62, 0x75, 0x67, 0x22, 0x4f, 0x0a, 0x03, 0x45, 0x4f, 0x41,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x50, 0x0a, 0x0a, 0x46, 0x75,
	0x7a, 0x7a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6f, 0x74, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x64, 0x75, 0x6d, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x64,
	0x75, 0x6d, 0x70, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x63, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x72, 0x61, 0x63, 0x65, 0x73,
}

var (
	file_fuzzer_proto_rawDescOnce sync.Once
	file_fuzzer_proto_rawDescData = file_fuzzer_proto_rawDesc
)

func file_fuzzer_proto_rawDescGZIP() []byte {
	file_fuzzer_proto_rawDescOnce.Do(func() {
		file_fuzzer_proto_rawDescData = protoimpl.X.CompressGZIP(file_fuzzer_proto_rawDescData)
	})
	return file_fuzzer_proto_rawDescData
}

var file_fuzzer_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_fuzzer_proto_goTypes = []interface{}{
	(*Fuzzed)(nil),      // 0: Fuzzed
	(*Block)(nil),       // 1: Block
	(*Transaction)(nil), // 2: Transaction
	(*EOA)(nil),         // 3: EOA
	(*FuzzResult)(nil),  // 4: FuzzResult
}
var file_fuzzer_proto_depIdxs = []int32{
	3, // 0: Fuzzed.genesis_account:type_name -> EOA
	1, // 1: Fuzzed.blocks:type_name -> Block
	2, // 2: Block.transactions:type_name -> Transaction
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_fuzzer_proto_init() }
func file_fuzzer_proto_init() {
	if File_fuzzer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_fuzzer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fuzzed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fuzzer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fuzzer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fuzzer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EOA); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fuzzer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FuzzResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fuzzer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fuzzer_proto_goTypes,
		DependencyIndexes: file_fuzzer_proto_depIdxs,
		MessageInfos:      file_fuzzer_proto_msgTypes,
	}.Build()
	File_fuzzer_proto = out.File
	file_fuzzer_proto_rawDesc = nil
	file_fuzzer_proto_goTypes = nil
	file_fuzzer_proto_depIdxs = nil
}
